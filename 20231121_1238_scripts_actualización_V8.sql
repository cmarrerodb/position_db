-- This script was generated by the Schema Diff utility in pgAdmin 4. 
-- For the circular dependencies, the order in which Schema Diff writes the objects is not very sophisticated 
-- and may require manual changes to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps. 
-- SCRIPT DE ACTUALIZACIÓN DEL MODELO DE DATOS DE AUDITORIA GPS A LA VERSIÓN 9
 BEGIN; 
 CREATE TABLE IF NOT EXISTS public.stats_gps_proveedor_semana
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    patentes_total bigint,
    proveedor_id integer,
    fecha date NOT NULL,
    semana smallint NOT NULL,
    frecuencia_motor_on time without time zone NOT NULL,
    frecuencia_motor_off time without time zone NOT NULL,
    latencia integer NOT NULL,
    q_patetentes_no_ign integer NOT NULL,
    q_patentes_no_deteccion integer NOT NULL,
    q_desordenadas integer NOT NULL,
    created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone,
    deleted_at timestamp without time zone,
    CONSTRAINT stats_gps_semana_transportista_copy1_pkey PRIMARY KEY (id),
    CONSTRAINT fk_stats_gps_proveedor_semana FOREIGN KEY (proveedor_id)
        REFERENCES public.gps_proveedor (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.stats_gps_proveedor_semana
    OWNER to postgres;

COMMENT ON TABLE public.stats_gps_proveedor_semana
    IS 'Almacena las estadísticas por semana de la data enviada por transportista';

COMMENT ON COLUMN public.stats_gps_proveedor_semana.id
    IS 'Identificacion unica del registro';

COMMENT ON COLUMN public.stats_gps_proveedor_semana.proveedor_id
    IS 'ID del proveedor del servicio GPS';

COMMENT ON COLUMN public.stats_gps_proveedor_semana.fecha
    IS 'Fecha de la hora';

COMMENT ON COLUMN public.stats_gps_proveedor_semana.semana
    IS 'Semana del año en la cual se genera el resúmen de la estadística, para esa fecha';

COMMENT ON COLUMN public.stats_gps_proveedor_semana.frecuencia_motor_on
    IS 'Frecuencia promedio del envio de datos durante esa hora del día, para esa fecha con el motor encendido';

COMMENT ON COLUMN public.stats_gps_proveedor_semana.frecuencia_motor_off
    IS 'Frecuencia promedio del envio de datos durante esa hora del día, para esa fecha con el motor apagado';

COMMENT ON COLUMN public.stats_gps_proveedor_semana.latencia
    IS 'Latencia promedio durante esa hora del día, para esa fecha';

COMMENT ON COLUMN public.stats_gps_proveedor_semana.q_patetentes_no_ign
    IS 'Patentes sin eventos de ignidi´ón en las ultimas 24 horas';

COMMENT ON COLUMN public.stats_gps_proveedor_semana.q_patentes_no_deteccion
    IS 'Patentes sin evcentos las ´últimas 24 horas';

COMMENT ON COLUMN public.stats_gps_proveedor_semana.q_desordenadas
    IS 'Cantidad de registros desordenados durante esa hora del día, para esa fecha';

COMMENT ON COLUMN public.stats_gps_proveedor_semana.created_at
    IS 'Timestamp de la creación del registro';

COMMENT ON COLUMN public.stats_gps_proveedor_semana.updated_at
    IS 'Timestamp de la última modificación del registro';

COMMENT ON COLUMN public.stats_gps_proveedor_semana.deleted_at
    IS 'Timestamp del borrado lógico del registro';
CREATE INDEX IF NOT EXISTS idx_stats_gps_hour_1_copy1
    ON public.stats_gps_proveedor_semana USING btree
    (id ASC NULLS LAST, patentes_total ASC NULLS LAST)
    TABLESPACE pg_default;
CREATE TABLE IF NOT EXISTS public.trn_tipo_transporte
(
    id integer NOT NULL,
    tipo character varying(255) COLLATE pg_catalog."default",
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone,
    deleted_at timestamp without time zone,
    CONSTRAINT trn_tipo_transporte_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.trn_tipo_transporte
    OWNER to postgres;

COMMENT ON COLUMN public.trn_tipo_transporte.created_at
    IS 'Timestamp de creacion del registro';

COMMENT ON COLUMN public.trn_tipo_transporte.updated_at
    IS 'Timestamp de modificacion del registro';

COMMENT ON COLUMN public.trn_tipo_transporte.deleted_at
    IS 'Timestamp de borrado logico del registro';
CREATE TABLE IF NOT EXISTS public.stats_gps_proveedor_hora
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    patentes_total bigint,
    proveedor_id integer,
    fecha date NOT NULL,
    hora smallint NOT NULL,
    frecuencia_motor_on time without time zone NOT NULL,
    frecuencia_motor_off time without time zone NOT NULL,
    latencia integer NOT NULL,
    q_patetentes_no_ign integer NOT NULL,
    q_patentes_no_deteccion integer NOT NULL,
    q_desordenadas integer NOT NULL,
    created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone,
    deleted_at timestamp without time zone,
    CONSTRAINT stats_gps_hora_transportista_copy1_pkey PRIMARY KEY (id),
    CONSTRAINT stats_gps_hora_transportista_copy1_proveedor_id_fkey FOREIGN KEY (proveedor_id)
        REFERENCES public.gps_proveedor (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.stats_gps_proveedor_hora
    OWNER to postgres;

COMMENT ON TABLE public.stats_gps_proveedor_hora
    IS 'Almacena las estadísticas por hora de la data enviada por lo sGPS transportista';

COMMENT ON COLUMN public.stats_gps_proveedor_hora.id
    IS 'Identificacion unica del registro';

COMMENT ON COLUMN public.stats_gps_proveedor_hora.proveedor_id
    IS 'ID del proveedor de servicios GPS';

COMMENT ON COLUMN public.stats_gps_proveedor_hora.fecha
    IS 'Fecha de la hora';

COMMENT ON COLUMN public.stats_gps_proveedor_hora.hora
    IS 'Hora del día en la cual se genera el resúmen de la estadística, para esa fecha';

COMMENT ON COLUMN public.stats_gps_proveedor_hora.frecuencia_motor_on
    IS 'Frecuencia promedio del envio de datos durante esa hora del día, para esa fecha con el motor encendido';

COMMENT ON COLUMN public.stats_gps_proveedor_hora.frecuencia_motor_off
    IS 'Frecuencia promedio del envio de datos durante esa hora del día, para esa fecha con el motor apagado';

COMMENT ON COLUMN public.stats_gps_proveedor_hora.latencia
    IS 'Latencia promedio durante esa hora del día, para esa fecha';

COMMENT ON COLUMN public.stats_gps_proveedor_hora.q_patetentes_no_ign
    IS 'Patentes sin eventos de ignidi´ón en las ultimas 24 horas';

COMMENT ON COLUMN public.stats_gps_proveedor_hora.q_patentes_no_deteccion
    IS 'Patentes sin evcentos las ´últimas 24 horas';

COMMENT ON COLUMN public.stats_gps_proveedor_hora.q_desordenadas
    IS 'Cantidad de registros desordenados durante esa hora del día, para esa fecha';

COMMENT ON COLUMN public.stats_gps_proveedor_hora.created_at
    IS 'Timestamp de la creación del registro';

COMMENT ON COLUMN public.stats_gps_proveedor_hora.updated_at
    IS 'Timestamp de la última modificación del registro';

COMMENT ON COLUMN public.stats_gps_proveedor_hora.deleted_at
    IS 'Timestamp del borrado lógico del registro';
CREATE INDEX IF NOT EXISTS idx_stats_gps_hour_copy1
    ON public.stats_gps_proveedor_hora USING btree
    (id ASC NULLS LAST, patentes_total ASC NULLS LAST)
    TABLESPACE pg_default;

CREATE TABLE IF NOT EXISTS public.cnf_perfiles
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    nombre character varying(150) COLLATE pg_catalog."default" NOT NULL,
    permisos text COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone,
    deleted_at timestamp without time zone,
    CONSTRAINT cnf_perfiles_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.cnf_perfiles
    OWNER to postgres;

COMMENT ON TABLE public.cnf_perfiles
    IS 'Perrfiles dfe usuario';

COMMENT ON COLUMN public.cnf_perfiles.id
    IS 'ID unico del registro';

COMMENT ON COLUMN public.cnf_perfiles.nombre
    IS 'Nombre del perfil del usuario';

COMMENT ON COLUMN public.cnf_perfiles.permisos
    IS 'Permisos del usuario';

COMMENT ON COLUMN public.cnf_perfiles.created_at
    IS 'Timestamp de creacion del registro';

COMMENT ON COLUMN public.cnf_perfiles.updated_at
    IS 'Timestamp de modificacion del registro';

COMMENT ON COLUMN public.cnf_perfiles.deleted_at
    IS 'Timestamp de borrado logico del registro';
CREATE TABLE IF NOT EXISTS public.stats_gps_proveedor_dia
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    patentes_total bigint,
    proveedor_id integer,
    fecha date NOT NULL,
    dia smallint NOT NULL,
    frecuencia_motor_on time without time zone NOT NULL,
    frecuencia_motor_off time without time zone NOT NULL,
    latencia integer NOT NULL,
    q_patetentes_no_ign integer NOT NULL,
    q_patentes_no_deteccion integer NOT NULL,
    q_desordenadas integer NOT NULL,
    created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone,
    deleted_at timestamp without time zone,
    CONSTRAINT stats_gps_dia_transportista_copy1_pkey PRIMARY KEY (id),
    CONSTRAINT fk_stats_gps_proveedor_dia FOREIGN KEY (proveedor_id)
        REFERENCES public.gps_proveedor (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.stats_gps_proveedor_dia
    OWNER to postgres;

COMMENT ON TABLE public.stats_gps_proveedor_dia
    IS 'Almacena las estadísticas por hora de la data enviada por transportista';

COMMENT ON COLUMN public.stats_gps_proveedor_dia.id
    IS 'Identificacion unica del registro';

COMMENT ON COLUMN public.stats_gps_proveedor_dia.patentes_total
    IS 'Cantidad de patentes relacionadas al Proveedor';

COMMENT ON COLUMN public.stats_gps_proveedor_dia.proveedor_id
    IS 'ID del proveedor del servicio GPS';

COMMENT ON COLUMN public.stats_gps_proveedor_dia.fecha
    IS 'Fecha de la hora';

COMMENT ON COLUMN public.stats_gps_proveedor_dia.dia
    IS 'Dia del mes en la cual se genera el resúmen de la estadística, para esa fecha';

COMMENT ON COLUMN public.stats_gps_proveedor_dia.frecuencia_motor_on
    IS 'Frecuencia promedio del envio de datos durante esa hora del día, para esa fecha con el motor encendido';

COMMENT ON COLUMN public.stats_gps_proveedor_dia.frecuencia_motor_off
    IS 'Frecuencia promedio del envio de datos durante esa hora del día, para esa fecha con el motor apagado';

COMMENT ON COLUMN public.stats_gps_proveedor_dia.latencia
    IS 'Latencia promedio durante esa hora del día, para esa fecha';

COMMENT ON COLUMN public.stats_gps_proveedor_dia.q_patetentes_no_ign
    IS 'Patentes sin eventos de ignidi´ón en las ultimas 24 horas';

COMMENT ON COLUMN public.stats_gps_proveedor_dia.q_patentes_no_deteccion
    IS 'Patentes sin evcentos las ´últimas 24 horas';

COMMENT ON COLUMN public.stats_gps_proveedor_dia.q_desordenadas
    IS 'Cantidad de registros desordenados durante esa hora del día, para esa fecha';

COMMENT ON COLUMN public.stats_gps_proveedor_dia.created_at
    IS 'Timestamp de la creación del registro';

COMMENT ON COLUMN public.stats_gps_proveedor_dia.updated_at
    IS 'Timestamp de la última modificación del registro';

COMMENT ON COLUMN public.stats_gps_proveedor_dia.deleted_at
    IS 'Timestamp del borrado lógico del registro';
CREATE INDEX IF NOT EXISTS idx_stats_gps_hour_0_copy1
    ON public.stats_gps_proveedor_dia USING btree
    (id ASC NULLS LAST, patentes_total ASC NULLS LAST)
    TABLESPACE pg_default;
CREATE TABLE IF NOT EXISTS public.trn_marcas
(
    id integer NOT NULL,
    marca character varying(255) COLLATE pg_catalog."default",
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone,
    deleted_at timestamp without time zone,
    CONSTRAINT trn_marcas_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.trn_marcas
    OWNER to postgres;

COMMENT ON COLUMN public.trn_marcas.created_at
    IS 'Timestamp de creacion del registro';

COMMENT ON COLUMN public.trn_marcas.updated_at
    IS 'Timestamp de modificacion del registro';

COMMENT ON COLUMN public.trn_marcas.deleted_at
    IS 'Timestamp de borrado logico del registro';
CREATE TABLE IF NOT EXISTS public.stats_gps_proveedor_mes
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    patentes_total bigint,
    proveedor_id integer,
    fecha date NOT NULL,
    mes smallint NOT NULL,
    frecuencia_motor_on time without time zone NOT NULL,
    frecuencia_motor_off time without time zone NOT NULL,
    latencia integer NOT NULL,
    q_patetentes_no_ign integer NOT NULL,
    q_patentes_no_deteccion integer NOT NULL,
    q_desordenadas integer NOT NULL,
    created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone,
    deleted_at timestamp without time zone,
    CONSTRAINT stats_gps_mes_transportista_copy1_pkey PRIMARY KEY (id),
    CONSTRAINT stats_gps_mes_transportista_copy1_proveedor_id_fkey FOREIGN KEY (proveedor_id)
        REFERENCES public.gps_proveedor (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.stats_gps_proveedor_mes
    OWNER to postgres;

COMMENT ON TABLE public.stats_gps_proveedor_mes
    IS 'Almacena las estadísticas por mes de la data enviada por transportista';

COMMENT ON COLUMN public.stats_gps_proveedor_mes.id
    IS 'Identificacion unica del registro';

COMMENT ON COLUMN public.stats_gps_proveedor_mes.proveedor_id
    IS 'ID del proveedor del servicio GPS';

COMMENT ON COLUMN public.stats_gps_proveedor_mes.fecha
    IS 'Fecha de la hora';

COMMENT ON COLUMN public.stats_gps_proveedor_mes.mes
    IS 'Mes del año en la cual se genera el resúmen de la estadística, para esa fecha';

COMMENT ON COLUMN public.stats_gps_proveedor_mes.frecuencia_motor_on
    IS 'Frecuencia promedio del envio de datos durante esa hora del día, para esa fecha con el motor encendido';

COMMENT ON COLUMN public.stats_gps_proveedor_mes.frecuencia_motor_off
    IS 'Frecuencia promedio del envio de datos durante esa hora del día, para esa fecha con el motor apagado';

COMMENT ON COLUMN public.stats_gps_proveedor_mes.latencia
    IS 'Latencia promedio durante esa hora del día, para esa fecha';

COMMENT ON COLUMN public.stats_gps_proveedor_mes.q_patetentes_no_ign
    IS 'Patentes sin eventos de ignidi´ón en las ultimas 24 horas';

COMMENT ON COLUMN public.stats_gps_proveedor_mes.q_patentes_no_deteccion
    IS 'Patentes sin evcentos las ´últimas 24 horas';

COMMENT ON COLUMN public.stats_gps_proveedor_mes.q_desordenadas
    IS 'Cantidad de registros desordenados durante esa hora del día, para esa fecha';

COMMENT ON COLUMN public.stats_gps_proveedor_mes.created_at
    IS 'Timestamp de la creación del registro';

COMMENT ON COLUMN public.stats_gps_proveedor_mes.updated_at
    IS 'Timestamp de la última modificación del registro';

COMMENT ON COLUMN public.stats_gps_proveedor_mes.deleted_at
    IS 'Timestamp del borrado lógico del registro';
CREATE INDEX IF NOT EXISTS idx_stats_gps_hour_2_copy1
    ON public.stats_gps_proveedor_mes USING btree
    (id ASC NULLS LAST, patentes_total ASC NULLS LAST)
    TABLESPACE pg_default;
CREATE TABLE IF NOT EXISTS public.personal_access_tokens
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    tokenable_type character varying(255) COLLATE pg_catalog."default" NOT NULL,
    tokenable_id bigint NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    token character varying(64) COLLATE pg_catalog."default" NOT NULL,
    abilities text COLLATE pg_catalog."default",
    last_used_at timestamp without time zone,
    expires_at timestamp without time zone,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    CONSTRAINT personal_access_tokens_pkey PRIMARY KEY (id),
    CONSTRAINT idx_personal_access_tokens UNIQUE (token)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.personal_access_tokens
    OWNER to postgres;
CREATE INDEX IF NOT EXISTS personal_access_tokens_tokenable_type_tokenable_id_index
    ON public.personal_access_tokens USING btree
    (tokenable_type COLLATE pg_catalog."default" ASC NULLS LAST, tokenable_id ASC NULLS LAST)
    TABLESPACE pg_default;
COMMENT ON TABLE public.stats_trafic_proveedor_month
  IS 'Stadísitcas de tráfico del proveedor por mes';


COMMENT ON TABLE public.stats_gps_semana_transportista
  IS 'Almacena las estadísticas por semana de la data enviada por transportista';

COMMENT ON TABLE public.stats_trafic_proveedor_hour
  IS 'Stadísitcas de tráfico del proveedor por hora';


ALTER TABLE IF EXISTS public.desordenadas_mes
    ADD CONSTRAINT desordenadas_mes_pkey PRIMARY KEY (id);

COMMENT ON TABLE public.stats_gps_mes_patente
  IS 'Almacena las estadísticas por mes de la data por patente';
ALTER TABLE IF EXISTS public.desordenadas_dia
    ADD CONSTRAINT desordenadas_dia_pkey PRIMARY KEY (id);
COMMENT ON TABLE public.stats_trafic_proveedor_day
  IS 'Stadísitcas de tráfico del proveedor por minuto';

COMMENT ON TABLE public.stats_gps_mes_transportista
  IS 'Almacena las estadísticas por mes de la data enviada por transportista';
COMMENT ON TABLE public.stats_gps_hora_transportista
  IS 'Almacena las estadísticas por hora de la data enviada por lo sGPS transportista';
COMMENT ON TABLE public.stats_gps_semana_patente
  IS 'Almacena las estadísticas por semana de la data POR PATENTE';
ALTER TABLE IF EXISTS public.desordenadas_semana
    ADD CONSTRAINT desordenadas_semana_pkey PRIMARY KEY (id);
ALTER TABLE IF EXISTS public.users
    ADD CONSTRAINT fk_users_cnf_perfiles FOREIGN KEY (perfil_id)
    REFERENCES public.cnf_perfiles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

COMMENT ON TABLE public.cnf_colores
  IS 'Configuraci´ón de rango de colores de las patentes desarodenadas';
COMMENT ON TABLE public.stats_gps_dia_transportista
  IS 'Almacena las estadísticas por hora de la data enviada por transportista';

ALTER TABLE IF EXISTS public.stats_gps_dia_transportista DROP CONSTRAINT IF EXISTS pk_stat_gps_hour_id_0;

ALTER TABLE IF EXISTS public.stats_gps_dia_transportista
    ADD CONSTRAINT stats_gps_dia_transportista_pkey PRIMARY KEY (id);

COMMENT ON TABLE public.stats_trafic_proveedor_min
  IS 'Stadísitcas de tráfico del proveedor por minuto';
COMMENT ON TABLE public.stats_gps_hora_patente
  IS 'Almacena las estadísticas por hora de la data enviada por patente';

ALTER TABLE IF EXISTS public.trn_patentes
    ADD COLUMN tipo_id INTEGER NOT NULL;

ALTER TABLE IF EXISTS public.trn_patentes
    ADD COLUMN marca_id INTEGER NOT NULL;

ALTER TABLE IF EXISTS public.trn_patentes
    ADD CONSTRAINT fk_trn_patentes FOREIGN KEY (tipo_id)
    REFERENCES public.trn_tipo_transporte (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

ALTER TABLE IF EXISTS public.trn_patentes
    ADD CONSTRAINT fk_trn_patentes_trn_marcas FOREIGN KEY (marca_id)
    REFERENCES public.trn_marcas (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
COMMENT ON TABLE public.stats_gps_dia_patente
  IS 'Almacena las estadísticas por dia de la data por patente';
CREATE SEQUENCE IF NOT EXISTS public.stats_gps_hour_id_seq1
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 2147483647
    CACHE 1;

ALTER SEQUENCE public.stats_gps_hour_id_seq1
    OWNER TO postgres;
CREATE SEQUENCE IF NOT EXISTS public.stats_trafic_proveedor_day_id_seq1
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 2147483647
    CACHE 1;

ALTER SEQUENCE public.stats_trafic_proveedor_day_id_seq1
    OWNER TO postgres;

ALTER SEQUENCE public.stats_gps_proveedor_hora_id_seq
    OWNER TO postgres;


ALTER SEQUENCE public.personal_access_tokens_id_seq
    OWNER TO postgres;
CREATE SEQUENCE IF NOT EXISTS public.stats_gps_month_id_seq
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 2147483647
    CACHE 1;

ALTER SEQUENCE public.stats_gps_month_id_seq
    OWNER TO postgres;
CREATE SEQUENCE IF NOT EXISTS public.stats_trafic_proveedor_hour_id_seq2
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 2147483647
    CACHE 1
    OWNED BY stats_trafic_proveedor_hour.id;

ALTER SEQUENCE public.stats_trafic_proveedor_hour_id_seq2
    OWNER TO postgres;
CREATE SEQUENCE IF NOT EXISTS public.stats_gps_day_id_seq1
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 2147483647
    CACHE 1;

CREATE SEQUENCE IF NOT EXISTS public.stats_trafic_proveedor_month_id_seq1
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 2147483647
    CACHE 1;

ALTER SEQUENCE public.stats_trafic_proveedor_month_id_seq1
    OWNER TO postgres;

CREATE SEQUENCE IF NOT EXISTS public.gps_proveedor_id_seq1
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 2147483647
    CACHE 1;

ALTER SEQUENCE public.gps_proveedor_id_seq1
    OWNER TO postgres;
CREATE SEQUENCE IF NOT EXISTS public.gps_imei_id_seq2
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 2147483647
    CACHE 1
    OWNED BY gps_imei.id;

ALTER SEQUENCE public.gps_imei_id_seq2
    OWNER TO postgres;
CREATE SEQUENCE IF NOT EXISTS public.gps_transportista_id_seq1
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 2147483647
    CACHE 1;

ALTER SEQUENCE public.gps_transportista_id_seq1
    OWNER TO postgres;
CREATE SEQUENCE IF NOT EXISTS public.stats_trafic_proveedor_hour_id_seq1
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 2147483647
    CACHE 1;

ALTER SEQUENCE public.stats_trafic_proveedor_hour_id_seq1
    OWNER TO postgres;

ALTER SEQUENCE public.stats_gps_proveedor_dia_id_seq
    OWNER TO postgres;

ALTER SEQUENCE public.stats_gps_proveedor_mes_id_seq
    OWNER TO postgres;
CREATE SEQUENCE IF NOT EXISTS public.gps_imei_transportista_id_seq2
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 2147483647
    CACHE 1
    OWNED BY gps_imei.transportista_id;

ALTER SEQUENCE public.gps_imei_transportista_id_seq2
    OWNER TO postgres;
CREATE SEQUENCE IF NOT EXISTS public.trn_patentes_id_seq2
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 2147483647
    CACHE 1
    OWNED BY trn_patentes.id;

ALTER SEQUENCE public.trn_patentes_id_seq2
    OWNER TO postgres;
CREATE SEQUENCE IF NOT EXISTS public.stats_trafic_proveedor_min_id_seq1
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 2147483647
    CACHE 1;

ALTER SEQUENCE public.stats_trafic_proveedor_min_id_seq1
    OWNER TO postgres;
CREATE SEQUENCE IF NOT EXISTS public.user_id_seq
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 2147483647
    CACHE 1;

ALTER SEQUENCE public.user_id_seq
    OWNER TO postgres;
CREATE SEQUENCE IF NOT EXISTS public.gb_perfiles_id_seq2
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 2147483647
    CACHE 1
    OWNED BY gb_perfiles.id;

ALTER SEQUENCE public.gb_perfiles_id_seq2
    OWNER TO postgres;
CREATE SEQUENCE IF NOT EXISTS public.users_id_seq1
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 2147483647
    CACHE 1;

ALTER SEQUENCE public.users_id_seq1
    OWNER TO postgres;

CREATE SEQUENCE IF NOT EXISTS public.gb_perfiles_id_seq1
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 2147483647
    CACHE 1;

ALTER SEQUENCE public.gb_perfiles_id_seq1
    OWNER TO postgres;
CREATE SEQUENCE IF NOT EXISTS public.gps_real_time_id_seq1
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 2147483647
    CACHE 1;

ALTER SEQUENCE public.gps_real_time_id_seq1
    OWNER TO postgres;
CREATE SEQUENCE IF NOT EXISTS public.gps_real_time_id_seq2
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 2147483647
    CACHE 1
    OWNED BY gps_real_time.id;

ALTER SEQUENCE public.gps_real_time_id_seq2
    OWNER TO postgres;
CREATE SEQUENCE IF NOT EXISTS public.gps_imei_transportista_id_seq1
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 2147483647
    CACHE 1;

ALTER SEQUENCE public.gps_imei_transportista_id_seq1
    OWNER TO postgres;
CREATE SEQUENCE IF NOT EXISTS public.stats_gps_day_id_seq
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 2147483647
    CACHE 1;

ALTER SEQUENCE public.stats_gps_day_id_seq
    OWNER TO postgres;
CREATE SEQUENCE IF NOT EXISTS public.trn_patentes_transportista_id_seq1
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 2147483647
    CACHE 1;

ALTER SEQUENCE public.trn_patentes_transportista_id_seq1
    OWNER TO postgres;
CREATE SEQUENCE IF NOT EXISTS public.trn_patentes_id_seq1
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 2147483647
    CACHE 1;

ALTER SEQUENCE public.trn_patentes_id_seq1
    OWNER TO postgres;
CREATE SEQUENCE IF NOT EXISTS public.gps_imei_id_seq1
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 2147483647
    CACHE 1;

ALTER SEQUENCE public.gps_imei_id_seq1
    OWNER TO postgres;
CREATE SEQUENCE IF NOT EXISTS public.stats_gps_week_id_seq
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 2147483647
    CACHE 1;

ALTER SEQUENCE public.stats_gps_week_id_seq
    OWNER TO postgres;
CREATE SEQUENCE IF NOT EXISTS public.gps_proveedor_id_seq2
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 2147483647
    CACHE 1
    OWNED BY gps_proveedor.id;

ALTER SEQUENCE public.gps_proveedor_id_seq2
    OWNER TO postgres;
CREATE SEQUENCE IF NOT EXISTS public.trn_patentes_transportista_id_seq2
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 2147483647
    CACHE 1
    OWNED BY trn_patentes.transportista_id;

ALTER SEQUENCE public.trn_patentes_transportista_id_seq2
    OWNER TO postgres;

ALTER SEQUENCE public.stats_gps_proveedor_semana_id_seq
    OWNER TO postgres;
CREATE SEQUENCE IF NOT EXISTS public.gps_transportista_id_seq
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 2147483647
    CACHE 1;

ALTER SEQUENCE public.gps_transportista_id_seq
    OWNER TO postgres;
CREATE SEQUENCE IF NOT EXISTS public.stats_gps_week_id_seq1
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 2147483647
    CACHE 1;

ALTER SEQUENCE public.stats_gps_week_id_seq1
    OWNER TO postgres;
CREATE SEQUENCE IF NOT EXISTS public.stats_gps_hour_id_seq
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 2147483647
    CACHE 1;

ALTER SEQUENCE public.stats_gps_hour_id_seq
    OWNER TO postgres;
CREATE SEQUENCE IF NOT EXISTS public.stats_trafic_proveedor_min_id_seq2
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 2147483647
    CACHE 1
    OWNED BY stats_trafic_proveedor_min.id;

ALTER SEQUENCE public.stats_trafic_proveedor_min_id_seq2
    OWNER TO postgres;
CREATE SEQUENCE IF NOT EXISTS public.stats_trafic_proveedor_month_id_seq2
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 2147483647
    CACHE 1
    OWNED BY stats_trafic_proveedor_month.id;

ALTER SEQUENCE public.stats_trafic_proveedor_month_id_seq2
    OWNER TO postgres;
CREATE SEQUENCE IF NOT EXISTS public.stats_trafic_proveedor_day_id_seq2
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 2147483647
    CACHE 1
    OWNED BY stats_trafic_proveedor_day.id;

ALTER SEQUENCE public.stats_trafic_proveedor_day_id_seq2
    OWNER TO postgres;
ALTER SEQUENCE IF EXISTS public.stats_trafic_proveedor_month_id_seq
    OWNED BY NONE;

ALTER SEQUENCE IF EXISTS public.gps_imei_id_seq
    OWNED BY NONE;

ALTER SEQUENCE IF EXISTS public.stats_gps_dia_transportista_id_seq
    OWNED BY NONE;

ALTER SEQUENCE IF EXISTS public.stats_trafic_proveedor_hour_id_seq
    OWNED BY NONE;

ALTER SEQUENCE IF EXISTS public.gb_perfiles_id_seq
    OWNED BY NONE;
ALTER SEQUENCE IF EXISTS public.gb_perfiles_id_seq
    MAXVALUE 2147483647;

ALTER SEQUENCE IF EXISTS public.trn_patentes_id_seq
    OWNED BY NONE;

ALTER SEQUENCE IF EXISTS public.stats_trafic_proveedor_min_id_seq
    OWNED BY NONE;

ALTER SEQUENCE IF EXISTS public.users_id_seq
    MAXVALUE 2147483647;

ALTER SEQUENCE IF EXISTS public.stats_trafic_proveedor_day_id_seq
    OWNED BY NONE;

ALTER SEQUENCE IF EXISTS public.gps_real_time_id_seq
    OWNED BY NONE;

ALTER SEQUENCE IF EXISTS public.gps_imei_transportista_id_seq
    OWNED BY NONE;
ALTER SEQUENCE IF EXISTS public.gps_imei_transportista_id_seq
    MAXVALUE 2147483647;

ALTER SEQUENCE IF EXISTS public.gps_proveedor_id_seq
    OWNED BY NONE;
ALTER SEQUENCE IF EXISTS public.gps_proveedor_id_seq
    MAXVALUE 2147483647;

ALTER SEQUENCE IF EXISTS public.trn_patentes_transportista_id_seq
    OWNED BY NONE;
ALTER SEQUENCE IF EXISTS public.trn_patentes_transportista_id_seq
    MAXVALUE 2147483647;

CREATE OR REPLACE VIEW public.v_cant_patentes_proveedores
 AS
 SELECT gps_proveedor.id AS proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    count(trn_patentes.patente) AS cant_patentes
   FROM gps_imei
     LEFT JOIN gps_proveedor ON gps_imei.proveedor_id = gps_proveedor.id
     LEFT JOIN trn_patentes ON gps_imei.patente_id = trn_patentes.id
  GROUP BY gps_proveedor.id, gps_proveedor.razon_social
  ORDER BY (count(trn_patentes.patente)) DESC;

ALTER TABLE public.v_cant_patentes_proveedores
    OWNER TO postgres;

CREATE OR REPLACE VIEW public.v_cant_imei_proveedores
 AS
 SELECT gps_proveedor.id AS proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    count(gps_imei.imei) AS cant_imei
   FROM gps_imei
     LEFT JOIN gps_proveedor ON gps_imei.proveedor_id = gps_proveedor.id
     LEFT JOIN trn_patentes ON gps_imei.patente_id = trn_patentes.id
  GROUP BY gps_proveedor.id, gps_proveedor.razon_social
  ORDER BY (count(gps_imei.imei)) DESC;

ALTER TABLE public.v_cant_imei_proveedores
    OWNER TO postgres;

CREATE OR REPLACE VIEW public.v_imei_patentes_transportistas
 AS
 SELECT trn_transportista.id AS transportista_id,
    trn_transportista.razon_social AS transportista,
    trn_patentes.id AS patente_id,
    trn_patentes.patente,
    gps_imei.id,
    gps_imei.imei
   FROM gps_imei
     LEFT JOIN trn_patentes ON gps_imei.patente_id = trn_patentes.id
     LEFT JOIN trn_transportista ON gps_imei.transportista_id = trn_transportista.id
  ORDER BY trn_transportista.razon_social, trn_patentes.patente, gps_imei.imei;

ALTER TABLE public.v_imei_patentes_transportistas
    OWNER TO postgres;

CREATE OR REPLACE VIEW public.v_cant_patentes_transportistas
 AS
 SELECT trn_patentes.transportista_id,
    trn_transportista.razon_social AS transportista,
    count(trn_patentes.patente) AS cant_patentes
   FROM trn_patentes
     LEFT JOIN trn_transportista ON trn_patentes.transportista_id = trn_transportista.id
  GROUP BY trn_patentes.transportista_id, trn_transportista.razon_social
  ORDER BY (count(trn_patentes.patente)) DESC;

ALTER TABLE public.v_cant_patentes_transportistas
    OWNER TO postgres;

CREATE OR REPLACE VIEW public.v_imei_proveedores
 AS
 SELECT gps_proveedor.id AS proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    trn_patentes.id AS patente_id,
    trn_patentes.patente,
    gps_imei.id,
    gps_imei.imei
   FROM gps_imei
     LEFT JOIN gps_proveedor ON gps_imei.proveedor_id = gps_proveedor.id
     LEFT JOIN trn_patentes ON gps_imei.patente_id = trn_patentes.id
  ORDER BY gps_proveedor.razon_social, trn_patentes.patente, gps_imei.imei;

ALTER TABLE public.v_imei_proveedores
    OWNER TO postgres;

CREATE OR REPLACE VIEW public.v_patentes_proveedores
 AS
 SELECT gps_proveedor.id AS proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    trn_patentes.id AS patente_id,
    trn_patentes.patente
   FROM gps_imei
     LEFT JOIN gps_proveedor ON gps_imei.proveedor_id = gps_proveedor.id
     LEFT JOIN trn_patentes ON gps_imei.patente_id = trn_patentes.id
  ORDER BY gps_proveedor.razon_social, trn_patentes.patente;

ALTER TABLE public.v_patentes_proveedores
    OWNER TO postgres;

CREATE OR REPLACE VIEW public.v_stats_trafic_proveedor_month
 AS
 SELECT stats_trafic_proveedor_month.id,
    stats_trafic_proveedor_month.proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    stats_trafic_proveedor_month.anio,
    stats_trafic_proveedor_month.mes,
    stats_trafic_proveedor_month.cantidad
   FROM stats_trafic_proveedor_month
     LEFT JOIN gps_proveedor ON stats_trafic_proveedor_month.proveedor_id = gps_proveedor.id
  ORDER BY gps_proveedor.razon_social, stats_trafic_proveedor_month.anio, stats_trafic_proveedor_month.mes;

ALTER TABLE public.v_stats_trafic_proveedor_month
    OWNER TO postgres;

CREATE OR REPLACE VIEW public.v_stats_gps_hora_transportista
 AS
 SELECT stats_gps_hora_transportista.id,
    trn_transportista.id AS transportista_id,
    trn_transportista.razon_social AS transportista,
    gps_proveedor.id AS proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    stats_gps_hora_transportista.fecha,
    stats_gps_hora_transportista.hora,
    stats_gps_hora_transportista.frecuencia_motor_on,
    stats_gps_hora_transportista.frecuencia_motor_off,
    stats_gps_hora_transportista.latencia,
    stats_gps_hora_transportista.q_patetentes_no_ign,
    stats_gps_hora_transportista.q_patentes_no_deteccion,
    stats_gps_hora_transportista.q_desordenadas
   FROM stats_gps_hora_transportista
     LEFT JOIN trn_transportista ON stats_gps_hora_transportista.transportista_id = trn_transportista.id
     LEFT JOIN gps_proveedor ON stats_gps_hora_transportista.proveedor_id = gps_proveedor.id
  ORDER BY trn_transportista.razon_social, gps_proveedor.razon_social, stats_gps_hora_transportista.fecha, stats_gps_hora_transportista.hora;

ALTER TABLE public.v_stats_gps_hora_transportista
    OWNER TO postgres;

CREATE OR REPLACE VIEW public.v_stats_gps_proveedor_mes
 AS
 SELECT gps_proveedor.id AS proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    stats_gps_proveedor_mes.patentes_total,
    stats_gps_proveedor_mes.fecha,
    stats_gps_proveedor_mes.mes,
    stats_gps_proveedor_mes.frecuencia_motor_on,
    stats_gps_proveedor_mes.frecuencia_motor_off,
    stats_gps_proveedor_mes.latencia,
    stats_gps_proveedor_mes.q_patetentes_no_ign,
    stats_gps_proveedor_mes.q_patentes_no_deteccion,
    stats_gps_proveedor_mes.q_desordenadas
   FROM stats_gps_proveedor_mes
     LEFT JOIN gps_proveedor ON stats_gps_proveedor_mes.proveedor_id = gps_proveedor.id
  ORDER BY gps_proveedor.razon_social, stats_gps_proveedor_mes.fecha, stats_gps_proveedor_mes.mes;

ALTER TABLE public.v_stats_gps_proveedor_mes
    OWNER TO postgres;

CREATE OR REPLACE VIEW public.v_desordenadas_mes
 AS
 SELECT desordenadas_mes.id,
    trn_transportista.id AS transportista_id,
    trn_transportista.razon_social AS transportista,
    gps_proveedor.id AS proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    trn_patentes.id AS patente_id,
    trn_patentes.patente,
    gps_imei.id AS imei_id,
    gps_imei.imei,
    desordenadas_mes.fecha,
    desordenadas_mes.mes,
    desordenadas_mes.cant
   FROM desordenadas_mes
     LEFT JOIN trn_transportista ON desordenadas_mes.transportista_id = trn_transportista.id
     LEFT JOIN trn_patentes ON desordenadas_mes.patente_id = trn_patentes.id
     LEFT JOIN gps_proveedor ON desordenadas_mes.proveedor_id = gps_proveedor.id
     LEFT JOIN gps_imei ON desordenadas_mes.imei_id = gps_imei.id
  ORDER BY trn_transportista.razon_social, gps_proveedor.razon_social, trn_patentes.patente, gps_imei.imei, desordenadas_mes.fecha, desordenadas_mes.mes;

ALTER TABLE public.v_desordenadas_mes
    OWNER TO postgres;

CREATE OR REPLACE VIEW public.v_stats_gps_semana_patente
 AS
 SELECT stats_gps_semana_patente.id,
    trn_transportista.id AS transportista_id,
    trn_transportista.razon_social AS transportista,
    gps_proveedor.id AS proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    trn_patentes.id AS patente_id,
    trn_patentes.patente,
    gps_imei.id AS imei_id,
    gps_imei.imei,
    stats_gps_semana_patente.fecha,
    stats_gps_semana_patente.semana,
    stats_gps_semana_patente.frecuencia_motor_on,
    stats_gps_semana_patente.frecuencia_motor_off,
    stats_gps_semana_patente.latencia,
    stats_gps_semana_patente.q_patetentes_no_ign,
    stats_gps_semana_patente.q_patentes_no_deteccion,
    stats_gps_semana_patente.q_desordenadas
   FROM stats_gps_semana_patente
     LEFT JOIN trn_patentes ON stats_gps_semana_patente.patente_id = trn_patentes.id
     LEFT JOIN trn_transportista ON stats_gps_semana_patente.transportista_id = trn_transportista.id
     LEFT JOIN gps_proveedor ON stats_gps_semana_patente.proveedor_id = gps_proveedor.id
     LEFT JOIN gps_imei ON stats_gps_semana_patente.imei_id = gps_imei.id
  ORDER BY trn_transportista.razon_social, gps_proveedor.razon_social, trn_patentes.patente, gps_imei.imei;

ALTER TABLE public.v_stats_gps_semana_patente
    OWNER TO postgres;

CREATE OR REPLACE VIEW public.v_imei_transportistas
 AS
 SELECT trn_transportista.id AS transportista_id,
    trn_transportista.razon_social AS transportista,
    gps_imei.id AS imei_id,
    gps_imei.imei
   FROM gps_imei
     LEFT JOIN trn_transportista ON gps_imei.transportista_id = trn_transportista.id
  ORDER BY trn_transportista.razon_social, gps_imei.imei;

ALTER TABLE public.v_imei_transportistas
    OWNER TO postgres;

CREATE OR REPLACE VIEW public.v_stats_trafic_proveedor_hour
 AS
 SELECT stats_trafic_proveedor_hour.id,
    stats_trafic_proveedor_hour.proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    stats_trafic_proveedor_hour.fecha,
    stats_trafic_proveedor_hour.hora,
    stats_trafic_proveedor_hour.cantidad
   FROM stats_trafic_proveedor_hour
     LEFT JOIN gps_proveedor ON stats_trafic_proveedor_hour.proveedor_id = gps_proveedor.id
  ORDER BY gps_proveedor.razon_social, stats_trafic_proveedor_hour.fecha, stats_trafic_proveedor_hour.hora;

ALTER TABLE public.v_stats_trafic_proveedor_hour
    OWNER TO postgres;

CREATE OR REPLACE VIEW public.v_desordenadas_semana
 AS
 SELECT desordenadas_semana.id,
    trn_transportista.id AS transportista_id,
    trn_transportista.razon_social AS transportista,
    gps_proveedor.id AS proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    trn_patentes.id AS patente_id,
    trn_patentes.patente,
    gps_imei.id AS imei_id,
    gps_imei.imei,
    desordenadas_semana.fecha,
    desordenadas_semana.semana,
    desordenadas_semana.cant
   FROM desordenadas_semana
     LEFT JOIN trn_transportista ON desordenadas_semana.transportista_id = trn_transportista.id
     LEFT JOIN trn_patentes ON desordenadas_semana.patente_id = trn_patentes.id
     LEFT JOIN gps_proveedor ON desordenadas_semana.proveedor_id = gps_proveedor.id
     LEFT JOIN gps_imei ON desordenadas_semana.imei_id = gps_imei.id
  ORDER BY trn_transportista.razon_social, gps_proveedor.razon_social, trn_patentes.patente, gps_imei.imei, desordenadas_semana.fecha, desordenadas_semana.semana;

ALTER TABLE public.v_desordenadas_semana
    OWNER TO postgres;

CREATE OR REPLACE VIEW public.v_stats_gps_mes_patente
 AS
 SELECT stats_gps_mes_patente.id,
    trn_transportista.id AS transportista_id,
    trn_transportista.razon_social AS transportista,
    gps_proveedor.id AS proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    trn_patentes.id AS patente_id,
    trn_patentes.patente,
    gps_imei.id AS imei_id,
    gps_imei.imei,
    stats_gps_mes_patente.fecha,
    stats_gps_mes_patente.mes,
    stats_gps_mes_patente.frecuencia_motor_on,
    stats_gps_mes_patente.frecuencia_motor_off,
    stats_gps_mes_patente.latencia,
    stats_gps_mes_patente.q_patetentes_no_ign,
    stats_gps_mes_patente.q_patentes_no_deteccion,
    stats_gps_mes_patente.q_desordenadas
   FROM stats_gps_mes_patente
     LEFT JOIN trn_patentes ON stats_gps_mes_patente.patente_id = trn_patentes.id
     LEFT JOIN trn_transportista ON stats_gps_mes_patente.transportista_id = trn_transportista.id
     LEFT JOIN gps_proveedor ON stats_gps_mes_patente.proveedor_id = gps_proveedor.id
     LEFT JOIN gps_imei ON stats_gps_mes_patente.imei_id = gps_imei.id
  ORDER BY trn_transportista.razon_social, gps_proveedor.razon_social, trn_patentes.patente, gps_imei.imei;

ALTER TABLE public.v_stats_gps_mes_patente
    OWNER TO postgres;

CREATE OR REPLACE VIEW public.v_desordenadas_hora
 AS
 SELECT desordenadas_hora.id,
    trn_transportista.id AS transportista_id,
    trn_transportista.razon_social AS transportista,
    gps_proveedor.id AS proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    trn_patentes.id AS patente_id,
    trn_patentes.patente,
    gps_imei.id AS imei_id,
    gps_imei.imei,
    desordenadas_hora.fecha,
    desordenadas_hora.hora,
    desordenadas_hora.cant
   FROM desordenadas_hora
     LEFT JOIN trn_transportista ON desordenadas_hora.transportista_id = trn_transportista.id
     LEFT JOIN trn_patentes ON desordenadas_hora.patente_id = trn_patentes.id
     LEFT JOIN gps_proveedor ON desordenadas_hora.proveedor_id = gps_proveedor.id
     LEFT JOIN gps_imei ON desordenadas_hora.imei_id = gps_imei.id
  ORDER BY trn_transportista.razon_social, gps_proveedor.razon_social, trn_patentes.patente, gps_imei.imei, desordenadas_hora.fecha, desordenadas_hora.hora;

ALTER TABLE public.v_desordenadas_hora
    OWNER TO postgres;

CREATE OR REPLACE VIEW public.v_stats_gps_semana_transportista
 AS
 SELECT stats_gps_semana_transportista.id,
    trn_transportista.id AS transportista_id,
    trn_transportista.razon_social AS transportista,
    gps_proveedor.id AS proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    stats_gps_semana_transportista.fecha,
    stats_gps_semana_transportista.semana,
    stats_gps_semana_transportista.frecuencia_motor_on,
    stats_gps_semana_transportista.frecuencia_motor_off,
    stats_gps_semana_transportista.latencia,
    stats_gps_semana_transportista.q_patetentes_no_ign,
    stats_gps_semana_transportista.q_patentes_no_deteccion,
    stats_gps_semana_transportista.q_desordenadas
   FROM stats_gps_semana_transportista
     LEFT JOIN trn_transportista ON stats_gps_semana_transportista.transportista_id = trn_transportista.id
     LEFT JOIN gps_proveedor ON stats_gps_semana_transportista.proveedor_id = gps_proveedor.id
  ORDER BY trn_transportista.razon_social, gps_proveedor.razon_social, stats_gps_semana_transportista.fecha, stats_gps_semana_transportista.semana;

ALTER TABLE public.v_stats_gps_semana_transportista
    OWNER TO postgres;

CREATE OR REPLACE VIEW public.v_stats_gps_hora_patente
 AS
 SELECT stats_gps_hora_patente.id,
    trn_transportista.id AS transportista_id,
    trn_transportista.razon_social AS transportista,
    gps_proveedor.id AS proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    trn_patentes.id AS patente_id,
    trn_patentes.patente,
    gps_imei.id AS imei_id,
    gps_imei.imei,
    stats_gps_hora_patente.fecha,
    stats_gps_hora_patente.hora,
    stats_gps_hora_patente.frecuencia_motor_on,
    stats_gps_hora_patente.frecuencia_motor_off,
    stats_gps_hora_patente.latencia,
    stats_gps_hora_patente.q_patetentes_no_ign,
    stats_gps_hora_patente.q_patentes_no_deteccion,
    stats_gps_hora_patente.q_desordenadas
   FROM stats_gps_hora_patente
     LEFT JOIN trn_patentes ON stats_gps_hora_patente.patente_id = trn_patentes.id
     LEFT JOIN trn_transportista ON stats_gps_hora_patente.transportista_id = trn_transportista.id
     LEFT JOIN gps_proveedor ON stats_gps_hora_patente.proveedor_id = gps_proveedor.id
     LEFT JOIN gps_imei ON stats_gps_hora_patente.imei_id = gps_imei.id
  ORDER BY trn_transportista.razon_social, gps_proveedor.razon_social, trn_patentes.patente, gps_imei.imei;

ALTER TABLE public.v_stats_gps_hora_patente
    OWNER TO postgres;

CREATE OR REPLACE VIEW public.v_transportistas_patentes
 AS
 SELECT trn_patentes.id,
    trn_patentes.transportista_id,
    trn_transportista.razon_social AS transportista,
    trn_patentes.patente
   FROM trn_patentes
     LEFT JOIN trn_transportista ON trn_patentes.transportista_id = trn_transportista.id
  ORDER BY trn_transportista.razon_social, trn_patentes.patente;

ALTER TABLE public.v_transportistas_patentes
    OWNER TO postgres;

CREATE OR REPLACE VIEW public.v_desordenadas_dia
 AS
 SELECT desordenadas_dia.id,
    trn_transportista.id AS transportista_id,
    trn_transportista.razon_social AS transportista,
    gps_proveedor.id AS proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    trn_patentes.id AS patente_id,
    trn_patentes.patente,
    gps_imei.id AS imei_id,
    gps_imei.imei,
    desordenadas_dia.fecha,
    desordenadas_dia.dia,
    desordenadas_dia.cant
   FROM desordenadas_dia
     LEFT JOIN trn_transportista ON desordenadas_dia.transportista_id = trn_transportista.id
     LEFT JOIN trn_patentes ON desordenadas_dia.patente_id = trn_patentes.id
     LEFT JOIN gps_proveedor ON desordenadas_dia.proveedor_id = gps_proveedor.id
     LEFT JOIN gps_imei ON desordenadas_dia.imei_id = gps_imei.id
  ORDER BY trn_transportista.razon_social, gps_proveedor.razon_social, trn_patentes.patente, gps_imei.imei, desordenadas_dia.fecha, desordenadas_dia.dia;

ALTER TABLE public.v_desordenadas_dia
    OWNER TO postgres;

CREATE OR REPLACE VIEW public.v_stats_trafic_proveedor_day
 AS
 SELECT stats_trafic_proveedor_day.id,
    gps_proveedor.id AS proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    stats_trafic_proveedor_day.fecha,
    stats_trafic_proveedor_day.cantidad
   FROM stats_trafic_proveedor_day
     JOIN gps_proveedor ON stats_trafic_proveedor_day.proveedor_id = gps_proveedor.id;

ALTER TABLE public.v_stats_trafic_proveedor_day
    OWNER TO postgres;

CREATE OR REPLACE VIEW public.v_stats_gps_mes_transportista
 AS
 SELECT trn_transportista.razon_social AS transportista,
    gps_proveedor.razon_social AS proveedor,
    stats_gps_mes_transportista.fecha,
    stats_gps_mes_transportista.mes,
    stats_gps_mes_transportista.frecuencia_motor_on,
    stats_gps_mes_transportista.frecuencia_motor_off,
    stats_gps_mes_transportista.latencia,
    stats_gps_mes_transportista.q_patetentes_no_ign,
    stats_gps_mes_transportista.q_patentes_no_deteccion,
    stats_gps_mes_transportista.q_desordenadas
   FROM stats_gps_mes_transportista
     LEFT JOIN trn_transportista ON stats_gps_mes_transportista.transportista_id = trn_transportista.id
     LEFT JOIN gps_proveedor ON stats_gps_mes_transportista.proveedor_id = gps_proveedor.id
  ORDER BY trn_transportista.razon_social, gps_proveedor.razon_social, stats_gps_mes_transportista.fecha, stats_gps_mes_transportista.mes;

ALTER TABLE public.v_stats_gps_mes_transportista
    OWNER TO postgres;

CREATE OR REPLACE VIEW public.v_stats_gps_proveedor_semana
 AS
 SELECT gps_proveedor.id AS proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    stats_gps_proveedor_semana.patentes_total,
    stats_gps_proveedor_semana.fecha,
    stats_gps_proveedor_semana.semana,
    stats_gps_proveedor_semana.frecuencia_motor_on,
    stats_gps_proveedor_semana.frecuencia_motor_off,
    stats_gps_proveedor_semana.latencia,
    stats_gps_proveedor_semana.q_patetentes_no_ign,
    stats_gps_proveedor_semana.q_patentes_no_deteccion,
    stats_gps_proveedor_semana.q_desordenadas
   FROM stats_gps_proveedor_semana
     LEFT JOIN gps_proveedor ON stats_gps_proveedor_semana.proveedor_id = gps_proveedor.id
  ORDER BY gps_proveedor.razon_social, stats_gps_proveedor_semana.fecha, stats_gps_proveedor_semana.semana;

ALTER TABLE public.v_stats_gps_proveedor_semana
    OWNER TO postgres;

CREATE OR REPLACE VIEW public.v_stats_trafic_proveedor_min
 AS
 SELECT stats_trafic_proveedor_min.id,
    stats_trafic_proveedor_min.proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    stats_trafic_proveedor_min.fecha,
    stats_trafic_proveedor_min.hora,
    stats_trafic_proveedor_min.minuto,
    stats_trafic_proveedor_min.cantidad
   FROM stats_trafic_proveedor_min
     LEFT JOIN gps_proveedor ON stats_trafic_proveedor_min.proveedor_id = gps_proveedor.id
  ORDER BY gps_proveedor.razon_social, stats_trafic_proveedor_min.fecha, stats_trafic_proveedor_min.hora, stats_trafic_proveedor_min.minuto;

ALTER TABLE public.v_stats_trafic_proveedor_min
    OWNER TO postgres;

CREATE OR REPLACE VIEW public.v_stats_gps_dia_patente
 AS
 SELECT stats_gps_dia_patente.id,
    trn_transportista.id AS transportista_id,
    trn_transportista.razon_social AS transportista,
    gps_proveedor.id AS proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    trn_patentes.id AS patente_id,
    trn_patentes.patente,
    gps_imei.id AS imei_id,
    gps_imei.imei,
    stats_gps_dia_patente.fecha,
    stats_gps_dia_patente.dia,
    stats_gps_dia_patente.frecuencia_motor_on,
    stats_gps_dia_patente.frecuencia_motor_off,
    stats_gps_dia_patente.latencia,
    stats_gps_dia_patente.q_patetentes_no_ign,
    stats_gps_dia_patente.q_patentes_no_deteccion,
    stats_gps_dia_patente.q_desordenadas
   FROM stats_gps_dia_patente
     LEFT JOIN trn_patentes ON stats_gps_dia_patente.patente_id = trn_patentes.id
     LEFT JOIN trn_transportista ON stats_gps_dia_patente.transportista_id = trn_transportista.id
     LEFT JOIN gps_proveedor ON stats_gps_dia_patente.proveedor_id = gps_proveedor.id
     LEFT JOIN gps_imei ON stats_gps_dia_patente.imei_id = gps_imei.id
  ORDER BY trn_transportista.razon_social, gps_proveedor.razon_social, trn_patentes.patente, gps_imei.imei;

ALTER TABLE public.v_stats_gps_dia_patente
    OWNER TO postgres;

CREATE OR REPLACE VIEW public.v_cant_imei_transportistas
 AS
 SELECT trn_transportista.id AS transportista_id,
    trn_transportista.razon_social AS transportista,
    count(gps_imei.imei) AS cant_imei
   FROM gps_imei
     LEFT JOIN trn_transportista ON gps_imei.transportista_id = trn_transportista.id
  GROUP BY trn_transportista.id, trn_transportista.razon_social
  ORDER BY (count(gps_imei.imei)) DESC;

ALTER TABLE public.v_cant_imei_transportistas
    OWNER TO postgres;

CREATE OR REPLACE VIEW public.v_stats_gps_dia_transportista
 AS
 SELECT stats_gps_dia_transportista.id,
    trn_transportista.id AS transportista_id,
    trn_transportista.razon_social AS transportista,
    gps_proveedor.id AS proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    stats_gps_dia_transportista.fecha,
    stats_gps_dia_transportista.dia,
    stats_gps_dia_transportista.frecuencia_motor_on,
    stats_gps_dia_transportista.frecuencia_motor_off,
    stats_gps_dia_transportista.latencia,
    stats_gps_dia_transportista.q_patetentes_no_ign,
    stats_gps_dia_transportista.q_patentes_no_deteccion,
    stats_gps_dia_transportista.q_desordenadas
   FROM stats_gps_dia_transportista
     LEFT JOIN trn_transportista ON stats_gps_dia_transportista.transportista_id = trn_transportista.id
     LEFT JOIN gps_proveedor ON stats_gps_dia_transportista.proveedor_id = gps_proveedor.id
  ORDER BY trn_transportista.razon_social, gps_proveedor.razon_social, stats_gps_dia_transportista.fecha, stats_gps_dia_transportista.dia;

ALTER TABLE public.v_stats_gps_dia_transportista
    OWNER TO postgres;

CREATE OR REPLACE VIEW public.v_imei_patentes_transportistas_proveedores
 AS
 SELECT trn_transportista.id AS transportista_id,
    trn_transportista.razon_social AS transportista,
    gps_proveedor.id AS proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    trn_patentes.id AS patente_id,
    trn_patentes.patente,
    gps_imei.id,
    gps_imei.imei
   FROM gps_imei
     LEFT JOIN gps_proveedor ON gps_imei.proveedor_id = gps_proveedor.id
     LEFT JOIN trn_patentes ON gps_imei.patente_id = trn_patentes.id
     LEFT JOIN trn_transportista ON gps_imei.transportista_id = trn_transportista.id
  ORDER BY trn_transportista.razon_social, gps_proveedor.razon_social, trn_patentes.patente, gps_imei.imei;

ALTER TABLE public.v_imei_patentes_transportistas_proveedores
    OWNER TO postgres;

CREATE OR REPLACE VIEW public.v_stats_gps_proveedor_hora
 AS
 SELECT gps_proveedor.id AS proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    stats_gps_proveedor_hora.patentes_total,
    stats_gps_proveedor_hora.fecha,
    stats_gps_proveedor_hora.hora,
    stats_gps_proveedor_hora.frecuencia_motor_on,
    stats_gps_proveedor_hora.frecuencia_motor_off,
    stats_gps_proveedor_hora.latencia,
    stats_gps_proveedor_hora.q_patetentes_no_ign,
    stats_gps_proveedor_hora.q_patentes_no_deteccion,
    stats_gps_proveedor_hora.q_desordenadas
   FROM stats_gps_proveedor_hora
     LEFT JOIN gps_proveedor ON stats_gps_proveedor_hora.proveedor_id = gps_proveedor.id
  ORDER BY gps_proveedor.razon_social, stats_gps_proveedor_hora.fecha, stats_gps_proveedor_hora.hora;

ALTER TABLE public.v_stats_gps_proveedor_hora
    OWNER TO postgres;

CREATE OR REPLACE VIEW public.v_stats_gps_proveedor_dia
 AS
 SELECT gps_proveedor.id AS proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    stats_gps_proveedor_dia.patentes_total,
    stats_gps_proveedor_dia.fecha,
    stats_gps_proveedor_dia.dia,
    stats_gps_proveedor_dia.frecuencia_motor_on,
    stats_gps_proveedor_dia.frecuencia_motor_off,
    stats_gps_proveedor_dia.latencia,
    stats_gps_proveedor_dia.q_patetentes_no_ign,
    stats_gps_proveedor_dia.q_patentes_no_deteccion,
    stats_gps_proveedor_dia.q_desordenadas
   FROM stats_gps_proveedor_dia
     LEFT JOIN gps_proveedor ON stats_gps_proveedor_dia.proveedor_id = gps_proveedor.id
  ORDER BY gps_proveedor.razon_social, stats_gps_proveedor_dia.fecha, stats_gps_proveedor_dia.dia;

ALTER TABLE public.v_stats_gps_proveedor_dia
    OWNER TO postgres;

-----------
 DROP VIEW v_stats_gps_semana_transportista;
 DROP VIEW v_stats_gps_semana_patente;
 DROP VIEW v_stats_gps_proveedor_semana;
 DROP VIEW v_stats_gps_proveedor_mes;
 DROP VIEW v_stats_gps_proveedor_hora;
 DROP VIEW v_stats_gps_proveedor_dia;
 DROP VIEW v_stats_gps_mes_transportista;
 DROP VIEW v_stats_gps_mes_patente;
 DROP VIEW v_stats_gps_hora_transportista;
 DROP VIEW v_stats_gps_hora_patente;
 DROP VIEW v_stats_gps_dia_transportista;
 DROP VIEW v_stats_gps_dia_patente;
-----------
ALTER TABLE stats_gps_semana_transportista ALTER COLUMN latencia TYPE time USING to_timestamp(latencia);
ALTER TABLE stats_gps_semana_patente ALTER COLUMN latencia TYPE time USING to_timestamp(latencia);
ALTER TABLE stats_gps_proveedor_semana ALTER COLUMN latencia TYPE time USING to_timestamp(latencia);
ALTER TABLE stats_gps_proveedor_mes ALTER COLUMN latencia TYPE time USING to_timestamp(latencia);
ALTER TABLE stats_gps_proveedor_hora ALTER COLUMN latencia TYPE time USING to_timestamp(latencia);
ALTER TABLE stats_gps_proveedor_dia ALTER COLUMN latencia TYPE time USING to_timestamp(latencia);
ALTER TABLE stats_gps_mes_transportista ALTER COLUMN latencia TYPE time USING to_timestamp(latencia);
ALTER TABLE stats_gps_mes_patente ALTER COLUMN latencia TYPE time USING to_timestamp(latencia);
ALTER TABLE stats_gps_hora_transportista ALTER COLUMN latencia TYPE time USING to_timestamp(latencia);
ALTER TABLE stats_gps_hora_patente ALTER COLUMN latencia TYPE time USING to_timestamp(latencia);
ALTER TABLE stats_gps_dia_transportista ALTER COLUMN latencia TYPE time USING to_timestamp(latencia);
ALTER TABLE stats_gps_dia_patente ALTER COLUMN latencia TYPE time USING to_timestamp(latencia);
ALTER TABLE gps_real_time ALTER COLUMN latencia TYPE time USING to_timestamp(latencia);
-----------
CREATE VIEW v_stats_gps_dia_patente AS 
SELECT stats_gps_dia_patente.id,
    trn_transportista.id AS transportista_id,
    trn_transportista.razon_social AS transportista,
    gps_proveedor.id AS proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    trn_patentes.id AS patente_id,
    trn_patentes.patente,
    gps_imei.id AS imei_id,
    gps_imei.imei,
    stats_gps_dia_patente.fecha,
    stats_gps_dia_patente.dia,
    stats_gps_dia_patente.frecuencia_motor_on,
    stats_gps_dia_patente.frecuencia_motor_off,
    stats_gps_dia_patente.latencia,
    stats_gps_dia_patente.q_patetentes_no_ign,
    stats_gps_dia_patente.q_patentes_no_deteccion,
    stats_gps_dia_patente.q_desordenadas
   FROM ((((stats_gps_dia_patente
     LEFT JOIN trn_patentes ON ((stats_gps_dia_patente.patente_id = trn_patentes.id)))
     LEFT JOIN trn_transportista ON ((stats_gps_dia_patente.transportista_id = trn_transportista.id)))
     LEFT JOIN gps_proveedor ON ((stats_gps_dia_patente.proveedor_id = gps_proveedor.id)))
     LEFT JOIN gps_imei ON ((stats_gps_dia_patente.imei_id = gps_imei.id)))
  ORDER BY trn_transportista.razon_social, gps_proveedor.razon_social, trn_patentes.patente, gps_imei.imei;

CREATE VIEW v_stats_gps_dia_transportista AS 
SELECT stats_gps_dia_transportista.id,
    trn_transportista.id AS transportista_id,
    trn_transportista.razon_social AS transportista,
    gps_proveedor.id AS proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    stats_gps_dia_transportista.fecha,
    stats_gps_dia_transportista.dia,
    stats_gps_dia_transportista.frecuencia_motor_on,
    stats_gps_dia_transportista.frecuencia_motor_off,
    stats_gps_dia_transportista.latencia,
    stats_gps_dia_transportista.q_patetentes_no_ign,
    stats_gps_dia_transportista.q_patentes_no_deteccion,
    stats_gps_dia_transportista.q_desordenadas
   FROM ((stats_gps_dia_transportista
     LEFT JOIN trn_transportista ON ((stats_gps_dia_transportista.transportista_id = trn_transportista.id)))
     LEFT JOIN gps_proveedor ON ((stats_gps_dia_transportista.proveedor_id = gps_proveedor.id)))
  ORDER BY trn_transportista.razon_social, gps_proveedor.razon_social, stats_gps_dia_transportista.fecha, stats_gps_dia_transportista.dia;

CREATE VIEW v_stats_gps_hora_patente AS 
SELECT stats_gps_hora_patente.id,
    trn_transportista.id AS transportista_id,
    trn_transportista.razon_social AS transportista,
    gps_proveedor.id AS proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    trn_patentes.id AS patente_id,
    trn_patentes.patente,
    gps_imei.id AS imei_id,
    gps_imei.imei,
    stats_gps_hora_patente.fecha,
    stats_gps_hora_patente.hora,
    stats_gps_hora_patente.frecuencia_motor_on,
    stats_gps_hora_patente.frecuencia_motor_off,
    stats_gps_hora_patente.latencia,
    stats_gps_hora_patente.q_patetentes_no_ign,
    stats_gps_hora_patente.q_patentes_no_deteccion,
    stats_gps_hora_patente.q_desordenadas
   FROM ((((stats_gps_hora_patente
     LEFT JOIN trn_patentes ON ((stats_gps_hora_patente.patente_id = trn_patentes.id)))
     LEFT JOIN trn_transportista ON ((stats_gps_hora_patente.transportista_id = trn_transportista.id)))
     LEFT JOIN gps_proveedor ON ((stats_gps_hora_patente.proveedor_id = gps_proveedor.id)))
     LEFT JOIN gps_imei ON ((stats_gps_hora_patente.imei_id = gps_imei.id)))
  ORDER BY trn_transportista.razon_social, gps_proveedor.razon_social, trn_patentes.patente, gps_imei.imei;

CREATE VIEW v_stats_gps_hora_transportista AS 
SELECT stats_gps_hora_transportista.id,
    trn_transportista.id AS transportista_id,
    trn_transportista.razon_social AS transportista,
    gps_proveedor.id AS proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    stats_gps_hora_transportista.fecha,
    stats_gps_hora_transportista.hora,
    stats_gps_hora_transportista.frecuencia_motor_on,
    stats_gps_hora_transportista.frecuencia_motor_off,
    stats_gps_hora_transportista.latencia,
    stats_gps_hora_transportista.q_patetentes_no_ign,
    stats_gps_hora_transportista.q_patentes_no_deteccion,
    stats_gps_hora_transportista.q_desordenadas
   FROM ((stats_gps_hora_transportista
     LEFT JOIN trn_transportista ON ((stats_gps_hora_transportista.transportista_id = trn_transportista.id)))
     LEFT JOIN gps_proveedor ON ((stats_gps_hora_transportista.proveedor_id = gps_proveedor.id)))
  ORDER BY trn_transportista.razon_social, gps_proveedor.razon_social, stats_gps_hora_transportista.fecha, stats_gps_hora_transportista.hora;

CREATE VIEW v_stats_gps_mes_patente AS 
SELECT stats_gps_mes_patente.id,
    trn_transportista.id AS transportista_id,
    trn_transportista.razon_social AS transportista,
    gps_proveedor.id AS proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    trn_patentes.id AS patente_id,
    trn_patentes.patente,
    gps_imei.id AS imei_id,
    gps_imei.imei,
    stats_gps_mes_patente.fecha,
    stats_gps_mes_patente.mes,
    stats_gps_mes_patente.frecuencia_motor_on,
    stats_gps_mes_patente.frecuencia_motor_off,
    stats_gps_mes_patente.latencia,
    stats_gps_mes_patente.q_patetentes_no_ign,
    stats_gps_mes_patente.q_patentes_no_deteccion,
    stats_gps_mes_patente.q_desordenadas
   FROM ((((stats_gps_mes_patente
     LEFT JOIN trn_patentes ON ((stats_gps_mes_patente.patente_id = trn_patentes.id)))
     LEFT JOIN trn_transportista ON ((stats_gps_mes_patente.transportista_id = trn_transportista.id)))
     LEFT JOIN gps_proveedor ON ((stats_gps_mes_patente.proveedor_id = gps_proveedor.id)))
     LEFT JOIN gps_imei ON ((stats_gps_mes_patente.imei_id = gps_imei.id)))
  ORDER BY trn_transportista.razon_social, gps_proveedor.razon_social, trn_patentes.patente, gps_imei.imei;

CREATE VIEW v_stats_gps_mes_transportista AS 
SELECT trn_transportista.razon_social AS transportista,
    gps_proveedor.razon_social AS proveedor,
    stats_gps_mes_transportista.fecha,
    stats_gps_mes_transportista.mes,
    stats_gps_mes_transportista.frecuencia_motor_on,
    stats_gps_mes_transportista.frecuencia_motor_off,
    stats_gps_mes_transportista.latencia,
    stats_gps_mes_transportista.q_patetentes_no_ign,
    stats_gps_mes_transportista.q_patentes_no_deteccion,
    stats_gps_mes_transportista.q_desordenadas
   FROM ((stats_gps_mes_transportista
     LEFT JOIN trn_transportista ON ((stats_gps_mes_transportista.transportista_id = trn_transportista.id)))
     LEFT JOIN gps_proveedor ON ((stats_gps_mes_transportista.proveedor_id = gps_proveedor.id)))
  ORDER BY trn_transportista.razon_social, gps_proveedor.razon_social, stats_gps_mes_transportista.fecha, stats_gps_mes_transportista.mes;

CREATE VIEW v_stats_gps_proveedor_dia AS 
SELECT gps_proveedor.id AS proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    stats_gps_proveedor_dia.patentes_total,
    stats_gps_proveedor_dia.fecha,
    stats_gps_proveedor_dia.dia,
    stats_gps_proveedor_dia.frecuencia_motor_on,
    stats_gps_proveedor_dia.frecuencia_motor_off,
    stats_gps_proveedor_dia.latencia,
    stats_gps_proveedor_dia.q_patetentes_no_ign,
    stats_gps_proveedor_dia.q_patentes_no_deteccion,
    stats_gps_proveedor_dia.q_desordenadas
   FROM (stats_gps_proveedor_dia
     LEFT JOIN gps_proveedor ON ((stats_gps_proveedor_dia.proveedor_id = gps_proveedor.id)))
  ORDER BY gps_proveedor.razon_social, stats_gps_proveedor_dia.fecha, stats_gps_proveedor_dia.dia;

CREATE VIEW v_stats_gps_proveedor_hora AS 
SELECT gps_proveedor.id AS proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    stats_gps_proveedor_hora.patentes_total,
    stats_gps_proveedor_hora.fecha,
    stats_gps_proveedor_hora.hora,
    stats_gps_proveedor_hora.frecuencia_motor_on,
    stats_gps_proveedor_hora.frecuencia_motor_off,
    stats_gps_proveedor_hora.latencia,
    stats_gps_proveedor_hora.q_patetentes_no_ign,
    stats_gps_proveedor_hora.q_patentes_no_deteccion,
    stats_gps_proveedor_hora.q_desordenadas
   FROM (stats_gps_proveedor_hora
     LEFT JOIN gps_proveedor ON ((stats_gps_proveedor_hora.proveedor_id = gps_proveedor.id)))
  ORDER BY gps_proveedor.razon_social, stats_gps_proveedor_hora.fecha, stats_gps_proveedor_hora.hora;
  
CREATE VIEW v_stats_gps_proveedor_mes AS 
SELECT gps_proveedor.id AS proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    stats_gps_proveedor_mes.patentes_total,
    stats_gps_proveedor_mes.fecha,
    stats_gps_proveedor_mes.mes,
    stats_gps_proveedor_mes.frecuencia_motor_on,
    stats_gps_proveedor_mes.frecuencia_motor_off,
    stats_gps_proveedor_mes.latencia,
    stats_gps_proveedor_mes.q_patetentes_no_ign,
    stats_gps_proveedor_mes.q_patentes_no_deteccion,
    stats_gps_proveedor_mes.q_desordenadas
   FROM (stats_gps_proveedor_mes
     LEFT JOIN gps_proveedor ON ((stats_gps_proveedor_mes.proveedor_id = gps_proveedor.id)))
  ORDER BY gps_proveedor.razon_social, stats_gps_proveedor_mes.fecha, stats_gps_proveedor_mes.mes;

CREATE VIEW v_stats_gps_proveedor_semana AS 
SELECT gps_proveedor.id AS proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    stats_gps_proveedor_semana.patentes_total,
    stats_gps_proveedor_semana.fecha,
    stats_gps_proveedor_semana.semana,
    stats_gps_proveedor_semana.frecuencia_motor_on,
    stats_gps_proveedor_semana.frecuencia_motor_off,
    stats_gps_proveedor_semana.latencia,
    stats_gps_proveedor_semana.q_patetentes_no_ign,
    stats_gps_proveedor_semana.q_patentes_no_deteccion,
    stats_gps_proveedor_semana.q_desordenadas
   FROM (stats_gps_proveedor_semana
     LEFT JOIN gps_proveedor ON ((stats_gps_proveedor_semana.proveedor_id = gps_proveedor.id)))
  ORDER BY gps_proveedor.razon_social, stats_gps_proveedor_semana.fecha, stats_gps_proveedor_semana.semana;

CREATE VIEW v_stats_gps_semana_patente AS 
SELECT stats_gps_semana_patente.id,
    trn_transportista.id AS transportista_id,
    trn_transportista.razon_social AS transportista,
    gps_proveedor.id AS proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    trn_patentes.id AS patente_id,
    trn_patentes.patente,
    gps_imei.id AS imei_id,
    gps_imei.imei,
    stats_gps_semana_patente.fecha,
    stats_gps_semana_patente.semana,
    stats_gps_semana_patente.frecuencia_motor_on,
    stats_gps_semana_patente.frecuencia_motor_off,
    stats_gps_semana_patente.latencia,
    stats_gps_semana_patente.q_patetentes_no_ign,
    stats_gps_semana_patente.q_patentes_no_deteccion,
    stats_gps_semana_patente.q_desordenadas
   FROM ((((stats_gps_semana_patente
     LEFT JOIN trn_patentes ON ((stats_gps_semana_patente.patente_id = trn_patentes.id)))
     LEFT JOIN trn_transportista ON ((stats_gps_semana_patente.transportista_id = trn_transportista.id)))
     LEFT JOIN gps_proveedor ON ((stats_gps_semana_patente.proveedor_id = gps_proveedor.id)))
     LEFT JOIN gps_imei ON ((stats_gps_semana_patente.imei_id = gps_imei.id)))
  ORDER BY trn_transportista.razon_social, gps_proveedor.razon_social, trn_patentes.patente, gps_imei.imei;

CREATE VIEW v_stats_gps_semana_transportista AS 
SELECT stats_gps_semana_transportista.id,
    trn_transportista.id AS transportista_id,
    trn_transportista.razon_social AS transportista,
    gps_proveedor.id AS proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    stats_gps_semana_transportista.fecha,
    stats_gps_semana_transportista.semana,
    stats_gps_semana_transportista.frecuencia_motor_on,
    stats_gps_semana_transportista.frecuencia_motor_off,
    stats_gps_semana_transportista.latencia,
    stats_gps_semana_transportista.q_patetentes_no_ign,
    stats_gps_semana_transportista.q_patentes_no_deteccion,
    stats_gps_semana_transportista.q_desordenadas
   FROM ((stats_gps_semana_transportista
     LEFT JOIN trn_transportista ON ((stats_gps_semana_transportista.transportista_id = trn_transportista.id)))
     LEFT JOIN gps_proveedor ON ((stats_gps_semana_transportista.proveedor_id = gps_proveedor.id)))
  ORDER BY trn_transportista.razon_social, gps_proveedor.razon_social, stats_gps_semana_transportista.fecha, stats_gps_semana_transportista.semana;
-----------
CREATE OR REPLACE VIEW public.v_stats_gps_semana_transportista
 AS
 SELECT stats_gps_semana_transportista.id,
    trn_transportista.id AS transportista_id,
    trn_transportista.razon_social AS transportista,
    gps_proveedor.id AS proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    stats_gps_semana_transportista.fecha,
    stats_gps_semana_transportista.semana,
    stats_gps_semana_transportista.frecuencia_motor_on,
    stats_gps_semana_transportista.frecuencia_motor_off,
    stats_gps_semana_transportista.latencia,
    stats_gps_semana_transportista.q_patetentes_no_ign,
    stats_gps_semana_transportista.q_patentes_no_deteccion,
    stats_gps_semana_transportista.q_desordenadas
   FROM stats_gps_semana_transportista
     LEFT JOIN trn_transportista ON stats_gps_semana_transportista.transportista_id = trn_transportista.id
     LEFT JOIN gps_proveedor ON stats_gps_semana_transportista.proveedor_id = gps_proveedor.id
  ORDER BY trn_transportista.razon_social, gps_proveedor.razon_social, stats_gps_semana_transportista.fecha, stats_gps_semana_transportista.semana;

ALTER TABLE public.v_stats_gps_semana_transportista
    OWNER TO postgres;


CREATE OR REPLACE VIEW public.v_stats_gps_hora_patente
 AS
 SELECT stats_gps_hora_patente.id,
    trn_transportista.id AS transportista_id,
    trn_transportista.razon_social AS transportista,
    gps_proveedor.id AS proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    trn_patentes.id AS patente_id,
    trn_patentes.patente,
    gps_imei.id AS imei_id,
    gps_imei.imei,
    stats_gps_hora_patente.fecha,
    stats_gps_hora_patente.hora,
    stats_gps_hora_patente.frecuencia_motor_on,
    stats_gps_hora_patente.frecuencia_motor_off,
    stats_gps_hora_patente.latencia,
    stats_gps_hora_patente.q_patetentes_no_ign,
    stats_gps_hora_patente.q_patentes_no_deteccion,
    stats_gps_hora_patente.q_desordenadas
   FROM stats_gps_hora_patente
     LEFT JOIN trn_patentes ON stats_gps_hora_patente.patente_id = trn_patentes.id
     LEFT JOIN trn_transportista ON stats_gps_hora_patente.transportista_id = trn_transportista.id
     LEFT JOIN gps_proveedor ON stats_gps_hora_patente.proveedor_id = gps_proveedor.id
     LEFT JOIN gps_imei ON stats_gps_hora_patente.imei_id = gps_imei.id
  ORDER BY trn_transportista.razon_social, gps_proveedor.razon_social, trn_patentes.patente, gps_imei.imei;

ALTER TABLE public.v_stats_gps_hora_patente
    OWNER TO postgres;


CREATE OR REPLACE VIEW public.v_stats_gps_hora_transportista
 AS
 SELECT stats_gps_hora_transportista.id,
    trn_transportista.id AS transportista_id,
    trn_transportista.razon_social AS transportista,
    gps_proveedor.id AS proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    stats_gps_hora_transportista.fecha,
    stats_gps_hora_transportista.hora,
    stats_gps_hora_transportista.frecuencia_motor_on,
    stats_gps_hora_transportista.frecuencia_motor_off,
    stats_gps_hora_transportista.latencia,
    stats_gps_hora_transportista.q_patetentes_no_ign,
    stats_gps_hora_transportista.q_patentes_no_deteccion,
    stats_gps_hora_transportista.q_desordenadas
   FROM stats_gps_hora_transportista
     LEFT JOIN trn_transportista ON stats_gps_hora_transportista.transportista_id = trn_transportista.id
     LEFT JOIN gps_proveedor ON stats_gps_hora_transportista.proveedor_id = gps_proveedor.id
  ORDER BY trn_transportista.razon_social, gps_proveedor.razon_social, stats_gps_hora_transportista.fecha, stats_gps_hora_transportista.hora;

ALTER TABLE public.v_stats_gps_hora_transportista
    OWNER TO postgres;


CREATE OR REPLACE VIEW public.v_stats_gps_proveedor_mes
 AS
 SELECT gps_proveedor.id AS proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    stats_gps_proveedor_mes.patentes_total,
    stats_gps_proveedor_mes.fecha,
    stats_gps_proveedor_mes.mes,
    stats_gps_proveedor_mes.frecuencia_motor_on,
    stats_gps_proveedor_mes.frecuencia_motor_off,
    stats_gps_proveedor_mes.latencia,
    stats_gps_proveedor_mes.q_patetentes_no_ign,
    stats_gps_proveedor_mes.q_patentes_no_deteccion,
    stats_gps_proveedor_mes.q_desordenadas
   FROM stats_gps_proveedor_mes
     LEFT JOIN gps_proveedor ON stats_gps_proveedor_mes.proveedor_id = gps_proveedor.id
  ORDER BY gps_proveedor.razon_social, stats_gps_proveedor_mes.fecha, stats_gps_proveedor_mes.mes;

ALTER TABLE public.v_stats_gps_proveedor_mes
    OWNER TO postgres;


CREATE OR REPLACE VIEW public.v_stats_gps_mes_transportista
 AS
 SELECT trn_transportista.razon_social AS transportista,
    gps_proveedor.razon_social AS proveedor,
    stats_gps_mes_transportista.fecha,
    stats_gps_mes_transportista.mes,
    stats_gps_mes_transportista.frecuencia_motor_on,
    stats_gps_mes_transportista.frecuencia_motor_off,
    stats_gps_mes_transportista.latencia,
    stats_gps_mes_transportista.q_patetentes_no_ign,
    stats_gps_mes_transportista.q_patentes_no_deteccion,
    stats_gps_mes_transportista.q_desordenadas
   FROM stats_gps_mes_transportista
     LEFT JOIN trn_transportista ON stats_gps_mes_transportista.transportista_id = trn_transportista.id
     LEFT JOIN gps_proveedor ON stats_gps_mes_transportista.proveedor_id = gps_proveedor.id
  ORDER BY trn_transportista.razon_social, gps_proveedor.razon_social, stats_gps_mes_transportista.fecha, stats_gps_mes_transportista.mes;

ALTER TABLE public.v_stats_gps_mes_transportista
    OWNER TO postgres;


CREATE OR REPLACE VIEW public.v_stats_gps_proveedor_semana
 AS
 SELECT gps_proveedor.id AS proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    stats_gps_proveedor_semana.patentes_total,
    stats_gps_proveedor_semana.fecha,
    stats_gps_proveedor_semana.semana,
    stats_gps_proveedor_semana.frecuencia_motor_on,
    stats_gps_proveedor_semana.frecuencia_motor_off,
    stats_gps_proveedor_semana.latencia,
    stats_gps_proveedor_semana.q_patetentes_no_ign,
    stats_gps_proveedor_semana.q_patentes_no_deteccion,
    stats_gps_proveedor_semana.q_desordenadas
   FROM stats_gps_proveedor_semana
     LEFT JOIN gps_proveedor ON stats_gps_proveedor_semana.proveedor_id = gps_proveedor.id
  ORDER BY gps_proveedor.razon_social, stats_gps_proveedor_semana.fecha, stats_gps_proveedor_semana.semana;

ALTER TABLE public.v_stats_gps_proveedor_semana
    OWNER TO postgres;


CREATE OR REPLACE VIEW public.v_stats_gps_dia_patente
 AS
 SELECT stats_gps_dia_patente.id,
    trn_transportista.id AS transportista_id,
    trn_transportista.razon_social AS transportista,
    gps_proveedor.id AS proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    trn_patentes.id AS patente_id,
    trn_patentes.patente,
    gps_imei.id AS imei_id,
    gps_imei.imei,
    stats_gps_dia_patente.fecha,
    stats_gps_dia_patente.dia,
    stats_gps_dia_patente.frecuencia_motor_on,
    stats_gps_dia_patente.frecuencia_motor_off,
    stats_gps_dia_patente.latencia,
    stats_gps_dia_patente.q_patetentes_no_ign,
    stats_gps_dia_patente.q_patentes_no_deteccion,
    stats_gps_dia_patente.q_desordenadas
   FROM stats_gps_dia_patente
     LEFT JOIN trn_patentes ON stats_gps_dia_patente.patente_id = trn_patentes.id
     LEFT JOIN trn_transportista ON stats_gps_dia_patente.transportista_id = trn_transportista.id
     LEFT JOIN gps_proveedor ON stats_gps_dia_patente.proveedor_id = gps_proveedor.id
     LEFT JOIN gps_imei ON stats_gps_dia_patente.imei_id = gps_imei.id
  ORDER BY trn_transportista.razon_social, gps_proveedor.razon_social, trn_patentes.patente, gps_imei.imei;

ALTER TABLE public.v_stats_gps_dia_patente
    OWNER TO postgres;


CREATE OR REPLACE VIEW public.v_stats_gps_semana_patente
 AS
 SELECT stats_gps_semana_patente.id,
    trn_transportista.id AS transportista_id,
    trn_transportista.razon_social AS transportista,
    gps_proveedor.id AS proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    trn_patentes.id AS patente_id,
    trn_patentes.patente,
    gps_imei.id AS imei_id,
    gps_imei.imei,
    stats_gps_semana_patente.fecha,
    stats_gps_semana_patente.semana,
    stats_gps_semana_patente.frecuencia_motor_on,
    stats_gps_semana_patente.frecuencia_motor_off,
    stats_gps_semana_patente.latencia,
    stats_gps_semana_patente.q_patetentes_no_ign,
    stats_gps_semana_patente.q_patentes_no_deteccion,
    stats_gps_semana_patente.q_desordenadas
   FROM stats_gps_semana_patente
     LEFT JOIN trn_patentes ON stats_gps_semana_patente.patente_id = trn_patentes.id
     LEFT JOIN trn_transportista ON stats_gps_semana_patente.transportista_id = trn_transportista.id
     LEFT JOIN gps_proveedor ON stats_gps_semana_patente.proveedor_id = gps_proveedor.id
     LEFT JOIN gps_imei ON stats_gps_semana_patente.imei_id = gps_imei.id
  ORDER BY trn_transportista.razon_social, gps_proveedor.razon_social, trn_patentes.patente, gps_imei.imei;

ALTER TABLE public.v_stats_gps_semana_patente
    OWNER TO postgres;


CREATE OR REPLACE VIEW public.v_stats_gps_dia_transportista
 AS
 SELECT stats_gps_dia_transportista.id,
    trn_transportista.id AS transportista_id,
    trn_transportista.razon_social AS transportista,
    gps_proveedor.id AS proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    stats_gps_dia_transportista.fecha,
    stats_gps_dia_transportista.dia,
    stats_gps_dia_transportista.frecuencia_motor_on,
    stats_gps_dia_transportista.frecuencia_motor_off,
    stats_gps_dia_transportista.latencia,
    stats_gps_dia_transportista.q_patetentes_no_ign,
    stats_gps_dia_transportista.q_patentes_no_deteccion,
    stats_gps_dia_transportista.q_desordenadas
   FROM stats_gps_dia_transportista
     LEFT JOIN trn_transportista ON stats_gps_dia_transportista.transportista_id = trn_transportista.id
     LEFT JOIN gps_proveedor ON stats_gps_dia_transportista.proveedor_id = gps_proveedor.id
  ORDER BY trn_transportista.razon_social, gps_proveedor.razon_social, stats_gps_dia_transportista.fecha, stats_gps_dia_transportista.dia;

ALTER TABLE public.v_stats_gps_dia_transportista
    OWNER TO postgres;


CREATE OR REPLACE VIEW public.v_stats_gps_proveedor_hora
 AS
 SELECT gps_proveedor.id AS proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    stats_gps_proveedor_hora.patentes_total,
    stats_gps_proveedor_hora.fecha,
    stats_gps_proveedor_hora.hora,
    stats_gps_proveedor_hora.frecuencia_motor_on,
    stats_gps_proveedor_hora.frecuencia_motor_off,
    stats_gps_proveedor_hora.latencia,
    stats_gps_proveedor_hora.q_patetentes_no_ign,
    stats_gps_proveedor_hora.q_patentes_no_deteccion,
    stats_gps_proveedor_hora.q_desordenadas
   FROM stats_gps_proveedor_hora
     LEFT JOIN gps_proveedor ON stats_gps_proveedor_hora.proveedor_id = gps_proveedor.id
  ORDER BY gps_proveedor.razon_social, stats_gps_proveedor_hora.fecha, stats_gps_proveedor_hora.hora;

ALTER TABLE public.v_stats_gps_proveedor_hora
    OWNER TO postgres;


CREATE OR REPLACE VIEW public.v_stats_gps_proveedor_dia
 AS
 SELECT gps_proveedor.id AS proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    stats_gps_proveedor_dia.patentes_total,
    stats_gps_proveedor_dia.fecha,
    stats_gps_proveedor_dia.dia,
    stats_gps_proveedor_dia.frecuencia_motor_on,
    stats_gps_proveedor_dia.frecuencia_motor_off,
    stats_gps_proveedor_dia.latencia,
    stats_gps_proveedor_dia.q_patetentes_no_ign,
    stats_gps_proveedor_dia.q_patentes_no_deteccion,
    stats_gps_proveedor_dia.q_desordenadas
   FROM stats_gps_proveedor_dia
     LEFT JOIN gps_proveedor ON stats_gps_proveedor_dia.proveedor_id = gps_proveedor.id
  ORDER BY gps_proveedor.razon_social, stats_gps_proveedor_dia.fecha, stats_gps_proveedor_dia.dia;

ALTER TABLE public.v_stats_gps_proveedor_dia
    OWNER TO postgres;


CREATE OR REPLACE VIEW public.v_stats_gps_mes_patente
 AS
 SELECT stats_gps_mes_patente.id,
    trn_transportista.id AS transportista_id,
    trn_transportista.razon_social AS transportista,
    gps_proveedor.id AS proveedor_id,
    gps_proveedor.razon_social AS proveedor,
    trn_patentes.id AS patente_id,
    trn_patentes.patente,
    gps_imei.id AS imei_id,
    gps_imei.imei,
    stats_gps_mes_patente.fecha,
    stats_gps_mes_patente.mes,
    stats_gps_mes_patente.frecuencia_motor_on,
    stats_gps_mes_patente.frecuencia_motor_off,
    stats_gps_mes_patente.latencia,
    stats_gps_mes_patente.q_patetentes_no_ign,
    stats_gps_mes_patente.q_patentes_no_deteccion,
    stats_gps_mes_patente.q_desordenadas
   FROM stats_gps_mes_patente
     LEFT JOIN trn_patentes ON stats_gps_mes_patente.patente_id = trn_patentes.id
     LEFT JOIN trn_transportista ON stats_gps_mes_patente.transportista_id = trn_transportista.id
     LEFT JOIN gps_proveedor ON stats_gps_mes_patente.proveedor_id = gps_proveedor.id
     LEFT JOIN gps_imei ON stats_gps_mes_patente.imei_id = gps_imei.id
  ORDER BY trn_transportista.razon_social, gps_proveedor.razon_social, trn_patentes.patente, gps_imei.imei;

ALTER TABLE public.v_stats_gps_mes_patente
    OWNER TO postgres;

-----------

 END;